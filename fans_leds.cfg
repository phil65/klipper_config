#fan for printed model FAN0
[fan]
pin: PB0

#fan for hotend FAN1
[heater_fan hotend_fan]
pin: PB1
shutdown_speed: 1
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan bottom_fan]
##	Controller fan - FAN2 Connector
pin: PB2
# kick_start_time: 1
# max_power: 0.9
# fan_speed: 0.99
# cycle_time: 0.01
heater: heater_bed

[fan_generic exhaust_fan]
##  Exhaust fan - In E2 OUT Positon
pin: PB3
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 1.0
max_power: 1.0
# heater: heater_bed
# heater_temp: 40
# fan_speed: 0.6
# min_temp: 0
# max_temp: 60
# sensor_type: EPCOS 100K B57560G104F
#   One of "EPCOS 100K B57560G104F", "ATC Semitec 104GT-2",
#   "NTC 100K beta 3950", "Honeywell 100K 135-104LAG-J01",
#   "NTC 100K MGB18-104F39050L32", "SliceEngineering 450", or
#   "TDK NTCG104LH104JT1"
# sensor_pin: PC1
# control: watermark

#####################################################################
# LED Control
#####################################################################

[neopixel Beleuchtung]
##  Chamber Lighting - In 5V-RGB Position
pin: PD3
chain_count: 50
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 0.0

[gcode_macro SIREN]
gcode:
    {% set COUNT = params.COUNT|default(1)|float %}

    #{% for flashes in range(params.COUNT|int) %}
    {% for flashes in range(params.COUNT|int) %}
	SET_RIGHT_LED RED=1 GREEN=0 BLUE=0
	SET_LEFT_LED RED=0 GREEN=0 BLUE=1
	G4 P1000                       ; sleep 250ms
	SET_LEFT_LED RED=1 GREEN=0 BLUE=0
	SET_RIGHT_LED RED=0 GREEN=0 BLUE=1
	G4 P1000                       ; sleep 250ms
    {% endfor %}
	SET_RIGHT_LED RED=1 GREEN=0 BLUE=0
	SET_LEFT_LED RED=1 GREEN=0 BLUE=0

[gcode_macro SET_LEFT_LED]
gcode:
    {% set RED = params.RED|default(1)|float %}
    {% set GREEN = params.GREEN|default(1)|float %}
    {% set BLUE = params.BLUE|default(1)|float %}
    {% for led in range(25) %}
        SET_LED LED=Beleuchtung RED={RED} BLUE={BLUE} GREEN={GREEN} INDEX={led + 1}
    {% endfor %}

[gcode_macro SET_RIGHT_LED]
gcode:
    {% set RED = params.RED|default(1)|float %}
    {% set GREEN = params.GREEN|default(1)|float %}
    {% set BLUE = params.BLUE|default(1)|float %}
    {% for led in range(25) %}
        SET_LED LED=Beleuchtung RED={RED} BLUE={BLUE} GREEN={GREEN} INDEX={led + 26}
    {% endfor %}

[gcode_macro SET_PROGRESS]
gcode:
    {% set PROGRESS = params.PROGRESS|default(0)|float %}
 #   {% set LED_COUNT = PROGRESS // 25}
    {% for led in range(12) %}
        SET_LED LED=Beleuchtung RED=1 INDEX={led + 1}
        SET_LED LED=Beleuchtung RED=1 INDEX={led + 26}
    {% endfor %}

[delayed_gcode AUTO_SIREN]
# initial_duration: 1.
gcode:
#  {action_respond_info("Extruder Temp: %.1f" % (printer.extruder0.temperature))}
  SET_LED LED=Beleuchtung BLUE=1
  #SET_LEFT_LED RED=0 BLUE=1 GREEN=0
  #SET_RIGHT_LED RED=0 BLUE=1 GREEN=0
  G4 P1000
  SET_LED LED=Beleuchtung RED=1
  G4 P1000
  #SET_LEFT_LED RED=1 BLUE=0 GREEN=0
  #SET_RIGHT_LED RED=1 BLUE=0 GREEN=0
  UPDATE_DELAYED_GCODE ID=AUTO_SIREN DURATION=1

[output_pin Licht]
pin: PC8
#   The pin to configure as an output. This parameter must be
#   provided.
#pwm: False
#   Set if the output pin should be capable of pulse-width-modulation.
#   If this is true, the value fields should be between 0 and 1; if it
#   is false the value fields should be either 0 or 1. The default is
#   False.
#static_value:
#   If this is set, then the pin is assigned to this value at startup
#   and the pin can not be changed during runtime. A static pin uses
#   slightly less ram in the micro-controller. The default is to use
#   runtime configuration of pins.
#value:
#   The value to initially set the pin to during MCU configuration.
#   The default is 0 (for low voltage).
#shutdown_value:
#   The value to set the pin to on an MCU shutdown event. The default
#   is 0 (for low voltage).
#maximum_mcu_duration:
#   The maximum duration a non-shutdown value may be driven by the MCU
#   without an acknowledge from the host.
#   If host can not keep up with an update, the MCU will shutdown
#   and set all pins to their respective shutdown values.
#   Default: 0 (disabled)
#   Usual values are around 5 seconds.
#cycle_time: 0.100
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.100 seconds for pwm pins.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#scale:
#   This parameter can be used to alter how the 'value' and
#   'shutdown_value' parameters are interpreted for pwm pins. If
#   provided, then the 'value' parameter should be between 0.0 and
#   'scale'. This may be useful when configuring a PWM pin that
#   controls a stepper voltage reference. The 'scale' can be set to
#   the equivalent stepper amperage if the PWM were fully enabled, and
#   then the 'value' parameter can be specified using the desired
#   amperage for the stepper. The default is to not scale the 'value'
#   parameter.